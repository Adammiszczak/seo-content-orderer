{"version":3,"sources":["components/InputOrder/LpInputOrder.js","components/InputOrder/InputOrder.js","components/Order/Order.js","App.js","serviceWorker.js","index.js"],"names":["LpInputOrder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","newLanding","objectSpread","state","landingPage","defineProperty","target","name","value","setState","submitLpData","preventDefault","allLandings","concat","toConsumableArray","lpUrl","phrases","content","signs","react_default","a","createElement","Fragment","onSubmit","className","htmlFor","type","id","onChange","placeholder","rows","class","Component","InputOrder","allLandingPages","for","InputOrder_LpInputOrder","Order","components_InputOrder_InputOrder","App","startHandler","startScreen","onClick","components_Order_Order","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e82bafde.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass LpInputOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allLandings: [],\r\n            landingPage : {\r\n                lpUrl: '',\r\n                phrases: '',\r\n                content: '',\r\n                signs: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        let newLanding;\r\n        \r\n        newLanding = {\r\n            ...this.state.landingPage,\r\n            [event.target.name] : event.target.value,\r\n        };\r\n\r\n        this.setState({\r\n            \r\n            landingPage : newLanding,\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    submitLpData = (event) => {\r\n        \r\n        event.preventDefault();\r\n\r\n        let newLanding = {\r\n            ...this.state.landingPage\r\n        };\r\n\r\n        this.setState({\r\n            allLandings: [...this.state.allLandings,\r\n                newLanding],\r\n                landingPage : {\r\n                    lpUrl: '',\r\n                    phrases: '',\r\n                    content: '',\r\n                    signs: ''\r\n                }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.submitLpData} className=\"w-75 mx-auto\">\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"lpUrl\">Landing Page URL:</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"lpUrl\"\r\n                            onChange={this.handleChange}\r\n                            name=\"lpUrl\"\r\n                            value={this.state.landingPage.lpUrl}\r\n                            placeholder=\"e.g. https://xyz.com/wedding-parties-poznan/\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"phrases\">Phrases for Landing Page</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"phrases\"\r\n                            onChange={this.handleChange}\r\n                            name=\"phrases\"\r\n                            value={this.state.landingPage.phrases}\r\n                            placeholder=\"e.g. wedding parties poznan, bridal parties poznan, cheap wedding party poznan, best bridal party poznan\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"content\">Heading, paragraphs, sections</label>\r\n                    <textarea\r\n                        placeholder=\"H1: Wedding parties Poznan\r\nGeneraly about this type of parties, about companies at Poznan etc\r\n1000 signs\r\nH2: Why you should choose wedding parties in Poznan with Johns Weddings?\r\nClient advantages, experience, positive reviews, about organization\r\n1000-1500 signs \"\r\n                        className=\"form-control\"\r\n                        id=\"content\"\r\n                        onChange={this.handleChange}\r\n                        name=\"content\"\r\n                        value={this.state.landingPage.content}\r\n                        rows=\"6\"></textarea>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"signs\">Approximately number of signs</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"signs\"\r\n                            onChange={this.handleChange}\r\n                            name=\"signs\"\r\n                            value={this.state.landingPage.signs}\r\n                            placeholder=\"e.g. 1500-2000\"/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Save Data</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LpInputOrder;","import React, {Component} from 'react';\r\nimport LpInputOrder from './LpInputOrder';\r\n\r\n\r\nclass InputOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allLandingPages: [],\r\n            \r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                                <h3 className=\"pb-5\">General Client Data</h3>\r\n                <form className=\"w-75 mx-auto\">\r\n                    <div class=\"form-group row\">\r\n                        <label className=\"col-sm-3 col-form-label\" for=\"domainUrl\">Domain URL:</label>\r\n                        <div className=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"domainUrl\"\r\n                                placeholder=\"e.g. https://xyz.com/\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label className=\"col-sm-3 col-form-label\" for=\"industry\">Type of Industry:</label>\r\n                        <div className=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"industry\"\r\n                                placeholder=\"e.g. weddings in poznan, wedding parties poznan, bridal parties poznan\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-3\">Is client new?</div>\r\n                        <div className=\"col-sm-2 d-flex justify-content-start\">\r\n                        <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\"/>\r\n                                <label className=\"form-check-label\" for=\"gridCheck1\">\r\n                                    Check if new\r\n                                </label>\r\n                                </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div class=\"form-group row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Save Data</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n                \r\n                <h3 className=\"my-5\">Specific Landing Pages Data</h3>\r\n                    <LpInputOrder/>\r\n\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputOrder;","import React, { Component } from 'react'; \r\nimport './Order.css';\r\nimport InputOrder from '../InputOrder/InputOrder'\r\n\r\n\r\nclass Order extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"orderMain\">\r\n            <h1 className=\"py-5 m-0\">Start making your order!</h1>\r\n            <InputOrder/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\nimport './App.css';\nimport Order from './components/Order/Order'\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            startScreen: false\n        }\n    }\n\n    startHandler = () => {\n\n        this.setState({\n            startScreen: !this.startScreen\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n\n                    {this.state.startScreen === false && \n                      <header className=\"App-header\">\n                        <h1>SEO Content Orderer!</h1>\n                        <button onClick={this.startHandler} className=\"btn btn-light\">Press to Start!</button>\n                    </header>\n                  }\n                    {this.state.startScreen !== false && \n                      <Order/>\n                    }\n\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}