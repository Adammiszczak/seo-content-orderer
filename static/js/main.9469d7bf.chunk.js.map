{"version":3,"sources":["components/InputOrder/InputOrder.js","components/InputOrder/LpInputOrder.js","components/Order/Order.js","App.js","serviceWorker.js","index.js"],"names":["InputOrder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitDomainData","event","preventDefault","setState","disabled","state","rdySubmit","handleChangeClient","newDomainData","target","name","objectSpread","clientData","defineProperty","checked","value","domainUrl","industry","isNew","allLandings","react_default","a","createElement","Fragment","className","onSubmit","htmlFor","type","id","onChange","placeholder","style","fontSize","Component","LpInputOrder","handleChange","newLanding","landingPage","submitLpData","concat","toConsumableArray","lpUrl","phrases","content","signs","rows","class","length","onClick","finalizeOrder","Order","components_InputOrder_InputOrder","InputOrder_LpInputOrder","App","startHandler","startScreen","components_Order_Order","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9469d7bf.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nclass InputOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n            clientData: {\r\n                domainUrl: '',\r\n                industry: '',\r\n                isNew: ''\r\n            },\r\n            rdySubmit: this.props.allLandings,\r\n\r\n        };\r\n    }\r\n\r\n    submitDomainData = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            disabled: !this.state.disabled,\r\n            rdySubmit: true,\r\n        })\r\n    }\r\n\r\n    handleChangeClient = (event) => {\r\n\r\n        let newDomainData;\r\n\r\n        if (event.target.name === 'isNew') {\r\n\r\n            newDomainData = {\r\n                ...this.state.clientData,\r\n                [event.target.name]: event.target.checked\r\n            }\r\n\r\n        } else {\r\n\r\n            newDomainData = {\r\n                ...this.state.clientData,\r\n                [event.target.name]: event.target.value\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({\r\n            clientData: newDomainData\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <h3 className=\"pb-5\">General Client Data</h3>\r\n                <form onSubmit={this.submitDomainData} className=\"w-75 mx-auto\">\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-3 col-form-label\" htmlFor=\"domainUrl\">Domain URL:</label>\r\n                        <div className=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"domainUrl\"\r\n                                onChange={this.handleChangeClient}\r\n                                name=\"domainUrl\"\r\n                                value={this.state.clientData.domainUrl}\r\n                                placeholder=\"e.g. https://xyz.com/\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-3 col-form-label\" htmlFor=\"industry\">Type of Industry:</label>\r\n                        <div className=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"industry\"\r\n                                onChange={this.handleChangeClient}\r\n                                name=\"industry\"\r\n                                value={this.state.clientData.industry}\r\n                                placeholder=\"e.g. weddings in poznan, wedding parties poznan, bridal parties poznan\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-3\">Is client new?</div>\r\n                        <div className=\"col-sm-2 d-flex justify-content-start\">\r\n                            <div className=\"form-check\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"isNew\"\r\n                                    onChange={this.handleChangeClient}\r\n                                    name=\"isNew\"\r\n                                    value={this.state.clientData.isNew}/>\r\n                                <label className=\"form-check-label\" htmlFor=\"isNew\">\r\n                                    Check if new\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12\">\r\n                            {this.state.disabled === false && <button type=\"submit\" className=\"btn btn-primary\">Save Data</button>\r\n}\r\n                            {this.state.disabled !== false && <button disabled type=\"submit\" className=\"btn btn-primary\">Save Data</button>\r\n}\r\n{this.state.disabled ? <React.Fragment><div><span style={{fontSize : '20px',}} className=\"badge badge-info my-2 p-2\">Go to next part!</span></div></React.Fragment> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputOrder;","import React, {Component} from 'react';\r\n\r\nclass LpInputOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allLandings: [],\r\n            landingPage : {\r\n                lpUrl: '',\r\n                phrases: '',\r\n                content: '',\r\n                signs: ''\r\n            },\r\n            rdySubmit: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        let newLanding;\r\n        \r\n        newLanding = {\r\n            ...this.state.landingPage,\r\n            [event.target.name] : event.target.value,\r\n        };\r\n\r\n        this.setState({\r\n            \r\n            landingPage : newLanding,\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    submitLpData = (event) => {\r\n        \r\n        event.preventDefault();\r\n\r\n        let newLanding = {\r\n            ...this.state.landingPage\r\n        };\r\n\r\n        this.setState({\r\n            allLandings: [...this.state.allLandings,\r\n                newLanding],\r\n                landingPage : {\r\n                    lpUrl: '',\r\n                    phrases: '',\r\n                    content: '',\r\n                    signs: ''\r\n                },\r\n                rdySubmit: true,\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h3 className=\"my-5\">Specific Landing Pages Data</h3>\r\n                <form onSubmit={this.submitLpData} className=\"w-75 mx-auto\">\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"lpUrl\">Landing Page URL:</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"lpUrl\"\r\n                            onChange={this.handleChange}\r\n                            name=\"lpUrl\"\r\n                            value={this.state.landingPage.lpUrl}\r\n                            placeholder=\"e.g. https://xyz.com/wedding-parties-poznan/\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"phrases\">Phrases for Landing Page</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"phrases\"\r\n                            onChange={this.handleChange}\r\n                            name=\"phrases\"\r\n                            value={this.state.landingPage.phrases}\r\n                            placeholder=\"e.g. wedding parties poznan, bridal parties poznan, cheap wedding party poznan, best bridal party poznan\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"content\">Heading, paragraphs, sections</label>\r\n                    <textarea\r\n                        placeholder=\"H1: Wedding parties Poznan\r\nGenerally about this type of parties, about companies at Poznan etc\r\n1000 signs\r\nH2: Why you should choose wedding parties in Poznan with Johns Weddings?\r\nClient advantages, experience, positive reviews, about organization\r\n1000-1500 signs \"\r\n                        className=\"form-control\"\r\n                        id=\"content\"\r\n                        onChange={this.handleChange}\r\n                        name=\"content\"\r\n                        value={this.state.landingPage.content}\r\n                        rows=\"6\"></textarea>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"signs\">Approximately number of signs</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"signs\"\r\n                            onChange={this.handleChange}\r\n                            name=\"signs\"\r\n                            value={this.state.landingPage.signs}\r\n                            placeholder=\"e.g. 1500-2000\"/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save LP Data</button>\r\n                            {this.state.allLandings.length >= 1 ? <button onClick={this.props.finalizeOrder} type=\"button\" className=\"btn btn-danger mx-2\">Finish Order!</button> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LpInputOrder;","import React, { Component } from 'react'; \r\nimport './Order.css';\r\nimport InputOrder from '../InputOrder/InputOrder'\r\nimport LpInputOrder from '../InputOrder/LpInputOrder';\r\n\r\nclass Order extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allLandings: null,\r\n          };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"orderMain\">\r\n            <h1 className=\"py-5 m-0\">Start making your order!</h1>\r\n            <InputOrder/>\r\n            <LpInputOrder/>\r\n            {/* {this.state.allLandings.length >= 1 ? <button onClick={this.props.finalizeOrder} type=\"button\" className=\"btn btn-danger mx-2\">Finish Order!</button> : null} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\nimport './App.css';\nimport Order from './components/Order/Order'\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            startScreen: false\n        }\n    }\n\n    startHandler = () => {\n\n        this.setState({\n            startScreen: !this.startScreen\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n\n                    {this.state.startScreen === false && \n                      <header className=\"App-header\">\n                        <h1>SEO Content Orderer!</h1>\n                        <button onClick={this.startHandler} className=\"btn btn-light\">Press to Start!</button>\n                    </header>\n                  }\n                    {this.state.startScreen !== false && \n                      <Order/>\n                    }\n\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}